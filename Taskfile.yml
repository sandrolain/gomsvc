version: "3"

vars:
  GO_FILES:
    sh: find . -type f -name '*.go' -not -path "./vendor/*"
  GO_PKGS:
    sh: go list ./pkg/... | grep -v "example" | grep -v "pkg/grpclib/test"

tasks:
  default:
    cmds:
      - task: test

  test:
    desc: Run tests with coverage
    cmds:
      - go test -v -race -coverprofile=coverage.out -covermode=atomic $(go list ./pkg/... | grep -v "example" | grep -v "pkg/grpclib/test")
      - go tool cover -html=coverage.out -o coverage.html

  gen-grpc:
    desc: Generate gRPC code
    cmds:
      - buf mod update
      - buf generate

  fmt:
    desc: Format Go code with simplification
    cmds:
      - gofmt -s -l -w .

  lint:
    desc: Run linters
    cmds:
      - golangci-lint run

  vet:
    desc: Run go vet for static analysis
    cmds:
      - go vet ./pkg/...

  build:
    desc: Build the project
    cmds:
      - go build -v ./pkg/...

  clean:
    desc: Clean build artifacts
    cmds:
      - go clean
      - rm -rf bin/
      - rm -rf dist/
      - rm -f coverage.out
      - rm -f coverage.html
      - rm -f security-report.json

  gosec:
    desc: Run security checks with gosec
    vars:
      GOSEC_INSTALLED:
        sh: command -v gosec || echo "not_found"
    cmds:
      - |
        if [ "{{.GOSEC_INSTALLED}}" = "not_found" ]; then
          echo "gosec is not installed. Installing..."
          go install github.com/securego/gosec/v2/cmd/gosec@latest
        fi
      - echo "Running gosec security scanner..."
      - gosec -fmt=json -out=security-report.json ./pkg/...

  check:
    desc: Run all checks (fmt, lint, vet, test, security)
    cmds:
      - task: fmt
      - task: lint
      - task: vet
      - task: test
      - task: gosec

  install-deps:
    desc: Install project dependencies
    cmds:
      - go mod download
      - go mod tidy

  docs:
    desc: Start godoc server for project documentation
    cmds:
      - cmd: |
          echo "Starting godoc server at http://localhost:6060"
          echo "View the documentation by navigating to http://localhost:6060/pkg/github.com/sandrolain/gomsvc/"
          godoc -http=:6060
